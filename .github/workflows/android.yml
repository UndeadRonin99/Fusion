name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Using Ubuntu runner

    env:
      API_KEY: ${{ secrets.API_KEY }}

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2: Enable KVM for hardware acceleration
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Step 3: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # Step 4: Set up Android SDK Command-line Tools
      - name: Set up Android SDK Command-line Tools
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O commandlinetools.zip
          sudo unzip -q commandlinetools.zip -d /usr/local/lib/android/sdk/cmdline-tools
          sudo mv /usr/local/lib/android/sdk/cmdline-tools/cmdline-tools /usr/local/lib/android/sdk/cmdline-tools/latest
          rm commandlinetools.zip

      # Step 5: Accept Android SDK licenses
      - name: Accept Android SDK licenses
        run: yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      # Step 6: Cache Gradle dependencies for faster builds
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 7: Grant execute permissions to gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Step 8: Build the project using Gradle
      - name: Build with Gradle
        run: ./gradlew build -Pandroid.useAndroidX=true -Pandroid.enableJetifier=true

      # Step 9: Start the emulator and run UI tests
      - name: Start emulator and run UI tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          disable-animations: true
          disable-linux-hw-accel: true  # Disable hardware acceleration
          emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
          script: ./gradlew connectedAndroidTest -Pandroid.testInstrumentationRunnerArguments.systemProperty=IS_TESTING=true

      # Optional: Upload Test Results to GitHub Actions artifacts
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: android-test-results
          path: app/build/reports/androidTests/*
